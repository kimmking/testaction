<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Read-write splitting on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/current/en/features/read-write-split/</link>
    <description>Recent content in Read-write splitting on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/current/en/features/read-write-split/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Core Concept</title>
      <link>https://shardingsphere.apache.org/document/current/en/features/read-write-split/concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/features/read-write-split/concept/</guid>
      <description>Master Database It refers to the database used in data insertion, update and deletion. It only supports single master database for now.
Slave Database It refers to the database used in data query. It supports multiple slave databases.
Master-Slave Replication It refers to the operation to asynchronously replicate data from the master database to the slave database. Because of master-slave asynchronization, there may be short-time data inconsistency between them.
Load Balance Strategy Through this strategy, queries are separated to different slave databases.</description>
    </item>
    
    <item>
      <title>Use Norms</title>
      <link>https://shardingsphere.apache.org/document/current/en/features/read-write-split/use-norms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/features/read-write-split/use-norms/</guid>
      <description>Supported Items  Provide the read-write split configuration of one master database with multiple slave databases, which can be used alone or with sharding table and database; Support SQL pass-through in independent use of read-write split; If there is write operation in the same thread and database connection, all the following read operations are from the master database to ensure data consistency; Forcible master database route based on SQL Hint;  Unsupported Items  Data replication between the master and the slave database; Data inconsistency caused by replication delay between databases; Double or multiple master databases to provide write operation; The data for transaction across Master and Slave nodes are inconsistent.</description>
    </item>
    
  </channel>
</rss>