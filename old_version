commit e71e4b6d0f9d8f0feba13695e79ac44b2f40e01d
Author: kimmking <kimmking@163.com>
Date:   Mon Nov 9 14:07:59 2020 +0800

    add docker build to shardingsphere-ui release note (#8086)

diff --git a/docs/community/content/contribute/release_ui.cn.md b/docs/community/content/contribute/release_ui.cn.md
index c75b5bf916..c97786bc86 100644
--- a/docs/community/content/contribute/release_ui.cn.md
+++ b/docs/community/content/contribute/release_ui.cn.md
@@ -352,13 +352,47 @@ git push --delete origin ${RELEASE.VERSION}-release
 git branch -d ${RELEASE.VERSION}-release
 ```
 
-**3. GitHub 版本发布**
+**3. 发布 Docker**
+
+3.1 准备工作
+
+本地安装 Docker，并启动服务。
+
+3.2 编译 Docker 镜像
+
+```shell
+git checkout ${RELEASE.VERSION}
+cd ~/shardingsphere-ui/shardingsphere-ui-distribution/shardingsphere-ui-bin-distribution/
+mvn clean package -Prelease,docker
+```
+
+3.3 给本地 Docker 镜像打标记
+
+通过`docker images`查看到IMAGE ID，例如为：e9ea51023687
+
+```shell
+docker tag e9ea51023687 apache/shardingsphere-ui:latest
+docker tag e9ea51023687 apache/shardingsphere-ui:${RELEASE.VERSION}
+```
+
+3.4 发布Docker镜像
+
+```shell
+docker push apache/shardingsphere-ui:latest
+docker push apache/shardingsphere-ui:${RELEASE_VERSION}
+```
+
+3.5 确认发布成功
+
+登录 [Docker Hub](https://hub.docker.com/r/apache/shardingsphere-ui/) 查看是否有发布的镜像
+
+**4. GitHub 版本发布**
 
 在 [GitHub Releases](https://github.com/apache/shardingsphere-ui/releases) 页面的 `shardingsphere-ui-${RELEASE_VERSION}` 版本上点击 `Edit`
 
 编辑版本号及版本说明，并点击 `Publish release`
 
-**4. 更新下载页面**
+**5. 更新下载页面**
 
 等待并确认新的发布版本同步至 Apache 镜像后，更新如下页面：
 
@@ -370,7 +404,7 @@ GPG签名文件和哈希校验文件的下载连接应该使用这个前缀： `
 
 `最新版本`中保留一个最新的版本。Incubator阶段历史版本会自动归档到[Archive repository](https://archive.apache.org/dist/incubator/shardingsphere/)
 
-**5. 邮件通知版本发布完成**
+**6. 邮件通知版本发布完成**
 
 ## 发送邮件到`dev@shardingsphere.apache.org`和`announce@apache.org`通知完成版本发布
 
diff --git a/docs/community/content/contribute/release_ui.en.md b/docs/community/content/contribute/release_ui.en.md
index 7e200f9c91..8c38dfcdba 100644
--- a/docs/community/content/contribute/release_ui.en.md
+++ b/docs/community/content/contribute/release_ui.en.md
@@ -356,13 +356,47 @@ git push --delete origin ${RELEASE.VERSION}-release
 git branch -d ${RELEASE.VERSION}-release
 ```
 
-**3. Publish release in GitHub**
+**3. Docker Release**
+
+3.1 Preparation
+
+Install and start docker service
+
+3.2 Compile Docker Image
+
+```shell
+git checkout ${RELEASE.VERSION}
+cd ~/shardingsphere-ui/shardingsphere-ui-distribution/shardingsphere-ui-bin-distribution/
+mvn clean package -Prelease,docker
+```
+
+3.3 Tag the local Docker Image
+
+Check the image ID through `docker images`, for example: e9ea51023687
+
+```shell
+docker tag e9ea51023687 apache/shardingsphere-ui:latest
+docker tag e9ea51023687 apache/shardingsphere-ui:${RELEASE.VERSION}
+```
+
+3.4 Publish Docker Image
+
+```shell
+docker push apache/shardingsphere-ui:latest
+docker push apache/shardingsphere-ui:${RELEASE_VERSION}
+```
+
+3.5 Confirm the successful release
+
+Login [Docker Hub](https://hub.docker.com/r/apache/shardingsphere-ui/) to check whether there are published images
+
+**4. Publish release in GitHub**
 
 Click `Edit` in [GitHub Releases](https://github.com/apache/shardingsphere-ui/releases)'s `shardingsphere-ui-${RELEASE_VERSION}` version
 
 Edit version number and release notes, click `Publish release`
 
-**4. Update the download page**
+**5. Update the download page**
 
 https://shardingsphere.apache.org/document/current/en/downloads/
 
@@ -372,7 +406,7 @@ GPG signatures and hashes (SHA* etc) should use URL start with `https://download
 
 Keep one latest versions in `Latest releases`. Incubating stage versions will be archived automatically in [Archive repository](https://archive.apache.org/dist/incubator/shardingsphere/)
 
-**5. Announce release completed by email**
+**6. Announce release completed by email**
 
 Send e-mail to `dev@shardingsphere.apache.org` and `announce@apache.org` to announce the release is finished
 
