commit 552112a922e784f6cc3be75ed1bd0c2c1178b533
Author: Haoran Meng <menghaoranss@gmail.com>
Date:   Fri Aug 7 19:18:43 2020 +0800

    Revise document for sharding-jdbc orchestration (#6695)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
index 5c3f7d6fdd..e1f52b5118 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
@@ -8,10 +8,14 @@ weight = 6
 ### 治理
 
 ```properties
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.type= # 治理持久化类型。如：Zookeeper, etcd, Apollo, Nacos
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.server-lists= # 治理服务列表。包括 IP 地址和端口号。多个地址用逗号分隔。如: host1:2181,host2:2181
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.namespace= # 治理命名空间
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.props.overwrite= # 本地配置是否覆盖配置中心配置。如果可覆盖，每次启动都以本地配置为准
+spring.shardingsphere.orchestration.name= # 治理名称
+spring.shardingsphere.orchestration.registryCenter.type= # 治理持久化类型。如：Zookeeper, etcd, Apollo, Nacos
+spring.shardingsphere.orchestration.registryCenter.server-lists= # 治理服务列表。包括 IP 地址和端口号。多个地址用逗号分隔。如: host1:2181,host2:2181
+spring.shardingsphere.orchestration.registryCenter.props= # 其它配置
+spring.shardingsphere.orchestration.additionalConfigCenter.type= # 可选的配置中心类型。如：Zookeeper, etcd, Apollo, Nacos
+spring.shardingsphere.orchestration.additionalConfigCenter.server-lists= # 可选的配置中心服务列表。包括 IP 地址和端口号。多个地址用逗号分隔。如: host1:2181,host2:2181
+spring.shardingsphere.orchestration.additionalConfigCenter.props= # 可选的配置中心其它配置
+spring.shardingsphere.orchestration.overwrite= # 本地配置是否覆盖配置中心配置。如果可覆盖，每次启动都以本地配置为准.
 ```
 
 ### 集群管理
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
index 1171d39106..615637aeb4 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
@@ -8,10 +8,14 @@ weight = 6
 ### Management
 
 ```properties
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.type= #Orchestration instance type. Example:Zookeeper, etcd, Apollo, Nacos
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.server-lists= #The list of servers that connect to orchestration instance, including IP and port number; use commas to separate
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.namespace= #Orchestration namespace
-spring.shardingsphere.orchestration.spring_boot_ds_sharding.properties.overwrite= #Whether to overwrite local configurations with config center configurations; if it can, each initialization should refer to local configurations
+spring.shardingsphere.orchestration.name= # Orchestration name
+spring.shardingsphere.orchestration.registryCenter.type= # Orchestration instance type. Example:Zookeeper, etcd, Apollo, Nacos
+spring.shardingsphere.orchestration.registryCenter.server-lists= # The list of servers that connect to orchestration instance, including IP and port number; use commas to separate
+spring.shardingsphere.orchestration.registryCenter.props= # Other properties
+spring.shardingsphere.orchestration.additionalConfigCenter.type= # Additional config center type. Example:Zookeeper, etcd, Apollo, Nacos
+spring.shardingsphere.orchestration.additionalConfigCenter.server-lists= # Additional config center server list. including IP and port number; use commas to separate
+spring.shardingsphere.orchestration.additionalConfigCenter.props= # Additional config center other properties
+spring.shardingsphere.orchestration.overwrite= # Whether to overwrite local configurations with config center configurations; if it can, each initialization should refer to local configurations
 ```
 
 ### Cluster
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.cn.md
index 0f26323210..f9da66e5b2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.cn.md
@@ -30,10 +30,12 @@ weight = 3
 ## 规则配置
 
 ```properties
-spring.shardingsphere.orchestration.spring_boot_ds.type=Zookeeper
-spring.shardingsphere.orchestration.spring_boot_ds.server-lists=localhost:2181
-spring.shardingsphere.orchestration.spring_boot_ds.namespace=orchestration-spring-boot-shardingsphere-test
-spring.shardingsphere.orchestration.spring_boot_ds.properties.overwrite=true
+spring.shardingsphere.orchestration.name=orchestration-spring-boot-shardingsphere-test
+spring.shardingsphere.orchestration.registryCenter.type=Zookeeper
+spring.shardingsphere.orchestration.registryCenter.server-lists=localhost:2181
+spring.shardingsphere.orchestration.additionalConfigCenter.type=Zookeeper
+spring.shardingsphere.orchestration.additionalConfigCenter.server-lists=localhost:2182
+spring.shardingsphere.orchestration.overwrite=true
 ```
 
 ## 在 Spring 中使用 OrchestrationShardingSphereDataSource
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.en.md
index d504187187..0c3f94c8f2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-boot-starter.en.md
@@ -30,10 +30,12 @@ weight = 3
 ## Configure Rule
 
 ```properties
-spring.shardingsphere.orchestration.spring_boot_ds.type=Zookeeper
-spring.shardingsphere.orchestration.spring_boot_ds.server-lists=localhost:2181
-spring.shardingsphere.orchestration.spring_boot_ds.namespace=orchestration-spring-boot-shardingsphere-test
-spring.shardingsphere.orchestration.spring_boot_ds.properties.overwrite=true
+spring.shardingsphere.orchestration.name=orchestration-spring-boot-shardingsphere-test
+spring.shardingsphere.orchestration.registryCenter.type=Zookeeper
+spring.shardingsphere.orchestration.registryCenter.server-lists=localhost:2181
+spring.shardingsphere.orchestration.additionalConfigCenter.type=Zookeeper
+spring.shardingsphere.orchestration.additionalConfigCenter.server-lists=localhost:2182
+spring.shardingsphere.orchestration.overwrite=true
 ```
 
 ## Use OrchestrationShardingSphereDataSource in Spring
