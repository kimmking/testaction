commit 9939c6338bf37a7209dedc79f8d7eaa45a0f7b82
Author: Haoran Meng <menghaoranss@gmail.com>
Date:   Wed Aug 26 20:03:07 2020 +0800

    Remove document of cluster (#7088)

diff --git a/docs/document/content/features/governance/_index.cn.md b/docs/document/content/features/governance/_index.cn.md
index 2fa2cfbd98..0dba9e2d19 100644
--- a/docs/document/content/features/governance/_index.cn.md
+++ b/docs/document/content/features/governance/_index.cn.md
@@ -31,11 +31,6 @@ chapter = true
 - 实现注册中心：支持 Zookeeper/etcd，管理各个 Proxy 示例的状态。
 - 实现元数据中心：支持 Zookeeper/etcd，管理 LogicSchema 的元数据。
 
-对于集群管理功能，目标如下：
-
-- 实现节点心跳检测：支持 Sharding-JDBC、Sharding-Proxy，使用可配置策略探活。
-- 实现集群状态拓扑管理：更新和管理集群状态拓扑图。
-
 对于可观测性，目标如下：
 
 - 支持 OpenTracing/Skywalking 集成，实现调用链的跟踪；
diff --git a/docs/document/content/features/governance/_index.en.md b/docs/document/content/features/governance/_index.en.md
index 1b9a2b5708..db5dd08486 100644
--- a/docs/document/content/features/governance/_index.en.md
+++ b/docs/document/content/features/governance/_index.en.md
@@ -31,11 +31,6 @@ For the governance function, the goals are as follows:
 - Realize the registration center: support Zookeeper/etcd, manage the status of each Proxy example.
 - Implement metadata center: support Zookeeper/etcd, manage metadata of LogicSchema.
 
-For the cluster management function, the goals are as follows:
-
-- Achieve node heartbeat detection: support Sharding-JDBC, Sharding-Proxy, use configurable strategy to detect live.
-- Implement cluster state topology management: update and manage cluster state topology maps.
-
 For observability, the goals are as follows:
 
 - Support OpenTracing/Skywalking integration and realize call chain tracking;
diff --git a/docs/document/content/features/governance/clusterstate/_index.cn.md b/docs/document/content/features/governance/clusterstate/_index.cn.md
deleted file mode 100644
index 6d30ba7280..0000000000
--- a/docs/document/content/features/governance/clusterstate/_index.cn.md
+++ /dev/null
@@ -1,13 +0,0 @@
-+++
-pre = "<b>3.4.3 </b>"
-title = "集群管理"
-weight = 3
-chapter = true
-+++
-
-## 导览
-
-本小节主要介绍 Apache ShardingSphere 集群管理的相关功能
-
-* 心跳检测
-* 集群状态拓扑
diff --git a/docs/document/content/features/governance/clusterstate/_index.en.md b/docs/document/content/features/governance/clusterstate/_index.en.md
deleted file mode 100644
index 89f6b1d9b7..0000000000
--- a/docs/document/content/features/governance/clusterstate/_index.en.md
+++ /dev/null
@@ -1,13 +0,0 @@
-+++
-pre = "<b>3.4.3 </b>"
-title = "Cluster"
-weight = 3
-chapter = true
-+++
-
-## Navigation
-
-This chapter mainly introduces the features of the cluster:
-
-* Heartbeat check
-* Cluster state topology
diff --git a/docs/document/content/features/governance/clusterstate/clusterstate.cn.md b/docs/document/content/features/governance/clusterstate/clusterstate.cn.md
deleted file mode 100644
index 1bbda151e7..0000000000
--- a/docs/document/content/features/governance/clusterstate/clusterstate.cn.md
+++ /dev/null
@@ -1,26 +0,0 @@
-+++
-title = "集群状态拓扑"
-weight = 2
-+++
-
-## 背景
-
-集群状态拓扑用于展示集群中所有节点状态以及节点之间的通信情况。
-ShardingSphere 基于心跳检测采集并存储在注册中心中的心跳数据，生成集群状态拓扑图，用于更直观展示集群中各个节点的实时状态以及应用节点和数据库节点之间的连接情况。
-
-## 目标
-
-- 实时展示应用节点和数据库节点状态变更
-- 实时展示应用节点和数据库节点之间连接状态
-- 数据库节点，如超过一定数量的应用节点与之连接异常，进行告警提醒（更新节点状态）
-
-## 节点状态说明
-
-- ONLINE 上线
-- OFFLINE 下线
-- DISABLED 禁用
-- UNKNOWN 未知
-
-## 使用
-
-集群状态拓扑集成在用户界面中，具体使用可参考 `ShardingSphere-UI` 项目。
diff --git a/docs/document/content/features/governance/clusterstate/clusterstate.en.md b/docs/document/content/features/governance/clusterstate/clusterstate.en.md
deleted file mode 100644
index ed656ee8ad..0000000000
--- a/docs/document/content/features/governance/clusterstate/clusterstate.en.md
+++ /dev/null
@@ -1,25 +0,0 @@
-+++
-title = "Cluster State Topology"
-weight = 2
-+++
-
-## Background
-
-The cluster status topology is used to display the status of all nodes in the cluster and the communication between the nodes. ShardingSphere collects and stores heartbeat data in the registration center based on heartbeat detection to generate the cluster state topology map, which is used to more intuitively display the real-time status of each node in the cluster and the connection between application nodes and database nodes.
-
-## Goal
-
-- Real-time display of application node and database node state changes
-- Real-time display of the connection status between application nodes and database nodes
-- Database nodes, such as abnormal connection with more than a certain number of application nodes, alert and remind (update node status)
-
-## Node Status Description
-
-- ONLINE online
-- OFFLINE offline
-- DISABLED disabled
-- UNKNOWN unknown
-
-## Use
-
-The cluster state topology is integrated in the user interface. For specific use, please refer to the ```ShardingSphere-UI``` project.
\ No newline at end of file
diff --git a/docs/document/content/features/governance/clusterstate/heartbeat.cn.md b/docs/document/content/features/governance/clusterstate/heartbeat.cn.md
deleted file mode 100644
index 464adc8791..0000000000
--- a/docs/document/content/features/governance/clusterstate/heartbeat.cn.md
+++ /dev/null
@@ -1,59 +0,0 @@
-+++
-title = "心跳检测"
-weight = 1
-+++
-
-## 背景
-
-ShardingSphere 治理模块旨在提供更高效，更自动化的集群管理功能，实现此功能依赖于集群中各个节点的状态信息，而各个节点之间的实时连接状态也是实现自动化集群管理必不可少的。
-
-心跳检测功能负责采集应用程序和数据库之间的实时连接状态，为后续自动化治理和调度提供支持。
-
-## 方案
-
-![设计方案](https://shardingsphere.apache.org/document/current/img/control-panel/cluster/heartbeat.png)
-
-- 应用程序启动时根据配置初始化心跳检测模块
-- 心跳检测模块启动心跳检测任务，定时获取与实例关联的数据库连接并执行心跳检测 `SQL`
-- 处理心跳检测结果并保存至注册中心
-
-## 数据结构
-
-心跳检测结果保存在注册中心 `instances` 节点应用实例下:
-```
-state: ONLINE # 应用实例状态
-sharding_db.ds_0: # 逻辑数据库名称.数据源名称
-	state: ONLINE # 数据源状态
-	lastConnect: #最后连接时间戳
-sharding_db.ds_1:
-	state: DISABLED
-	lastConnect:	
-master_slave_db.master_ds:
-	state: ONLINE
-	lastConnect:	
-master_slave_db.slave_ds_0:
-	state: ONLINE
-	lastConnect:	
-master_slave_db.slave_ds_1:
-	state: ONLINE
-	lastConnect:	
-```
-
-## 使用
-
-### Sharding-Proxy
-
-在 ShardingSphere-Proxy 的 `server.yaml` 文件中新增以下配置：
-```
-cluster:
-  heartbeat:
-    sql: select 1  # 心跳检测 SQL
-    threadCount: 1 # 心跳检测线程池大小
-    interval: 60   # 心跳检测任务间隔(s)
-    retryEnable: false # 是否开启重试，开启后如果检测失败则进行重试直到达到最大重试次数
-    retryMaximum: 3  # 最大重试次数，开启重试时生效
-    retryInterval: 3 # 重试间隔(s)，开启重试时生效
-proxy.cluster.enabled: false # 设置 true 开始心跳检测，false 关闭心跳检测
-```
-
-由于心跳检测结果需存储在注册中心，所以使用心跳检测功能需同时开启 ShardingSphere [分布式治理](/cn/features/governance/management/)功能。
diff --git a/docs/document/content/features/governance/clusterstate/heartbeat.en.md b/docs/document/content/features/governance/clusterstate/heartbeat.en.md
deleted file mode 100644
index d2f582a398..0000000000
--- a/docs/document/content/features/governance/clusterstate/heartbeat.en.md
+++ /dev/null
@@ -1,59 +0,0 @@
-+++
-title = "Heartbeat Detection"
-weight = 1
-+++
-
-## Background
-
-The ShardingSphere governance module is designed to provide a more efficient and automated cluster management feature. This depends on the state of each node in the cluster, and the real-time connection state between each node is also essential for automated cluster management.
-
-The heartbeat detection is responsible for collecting the real-time connection state between the application and the databases to provide support for subsequent automated management and scheduling.
-
-## Program
-
-![Program](https://shardingsphere.apache.org/document/current/img/control-panel/cluster/heartbeat.png)
-
-- Initialize the heartbeat detection module according to the configuration when the application starts
-- The heartbeat detection module starts the heartbeat detection task, periodically obtains the database connection associated with the instance and executes heartbeat detection `SQL`
-- Process the heartbeat detection result and persist it to the registry center
-
-## Data Structure
-
-The heartbeat detection result is persist to the `instances` node of registry center:
-```
-state: ONLINE     # Application instance state
-sharding_db.ds_0: # logicSchemaName.dataSourceName
-	state: ONLINE # DataSource state
-	lastConnect:  #Last connect timestamp
-sharding_db.ds_1:
-	state: DISABLED
-	lastConnect:	
-master_slave_db.master_ds:
-	state: ONLINE
-	lastConnect:	
-master_slave_db.slave_ds_0:
-	state: ONLINE
-	lastConnect:	
-master_slave_db.slave_ds_1:
-	state: ONLINE
-	lastConnect:	
-```
-
-## Use
-
-### Sharding-Proxy
-
-Add the following configuration to the `server.yaml` file of ShardingSphere-Proxy:
-```
-cluster:
-   heartbeat:
-     sql: select 1 # Heartbeat detection SQL
-     threadCount: 1 # Thread pool size
-     interval: 60 # Heartbeat detection task interval (s)
-     retryEnable: false # Whether to enable retry, if set true and detect fails, then retry until the retryMaximum is reached
-     retryMaximum: 3 # Maximum number of retry, effective when retryEnable is true
-     retryInterval: 3 # Retry interval (s), effective when retryEnable is true
-proxy.cluster.enabled: false # Set true to start heartbeat detection, false to disable heartbeat detection
-```
-
-Since the heartbeat detection results need to be stored in the registry center, the ShardingSphere [Governance](/cn/features/governance/management/) must also be enabled.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.cn.md
index 84c1286d2b..1e1b4a887a 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.cn.md
@@ -70,30 +70,3 @@ Nacos 属性配置
 | ----------- | --------- | ---------------------- | ---------------------------- |
 | group (?)   | String    | nacos group 配置       | SHARDING_SPHERE_DEFAULT_GROUP |
 | timeout (?) | long      | nacos 获取数据超时毫秒数 | 3000 毫秒                     |
-
-### 集群管理
-
-*配置入口*
-
-类名称：org.apache.shardingsphere.cluster.configuration.config.ClusterConfiguration
-
-可配置属性：
-
-| *名称*                    | *数据类型*                           | *说明*                                                            |
-| ------------------------ | ----------------------------------- | ----------------------------------------------------------------- |
-| heartbeat | HeartbeatConfiguration  | 心跳检测配置 |
-
-*心跳检测配置*
-
-类名称：org.apache.shardingsphere.cluster.configuration.config.HeartbeatConfiguration
-
-可配置属性：
-
-| *名称*       | *数据类型* | *说明*                 |
-| ----------- | --------- | ---------------------- |
-| sql   | String    | 心跳检测 SQL       |
-| interval | int      | 心跳检测间隔时间 (s) |
-| threadCount   | int    | 心跳检测线程池大小       |
-| retryEnable | Boolean      | 是否支持失败重试，可设置 true 或 false |
-| retryMaximum(?)   | int    | 最大重试次数      |
-| retryInterval(?) | int      | 重试间隔时间 (s) |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.en.md
index 02b3dd3108..8fa1679283 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/governance.en.md
@@ -71,30 +71,3 @@ Nacos Properties Configuration
 | ----------- | ----------- | ------------- | ----------------------------- |
 | group (?)   | String      | group         | SHARDING_SPHERE_DEFAULT_GROUP |
 | timeout (?) | long        | timeout       | 3000 milliseconds             |
-
-### Cluster
-
-*Configuration Entrance*
-
-Class name：org.apache.shardingsphere.cluster.configuration.config.ClusterConfiguration
-
-Attributes：
-
-| *Name*    | *Data Type*             | *Description*                     |
-| --------- | ----------------------- | --------------------------------- |
-| heartbeat | HeartbeatConfiguration  | heartbeat detection configuration |
-
-*Heartbeat Detection Configuration*
-
-Class name：org.apache.shardingsphere.cluster.configuration.config.HeartbeatConfiguration
-
-Attributes：
-
-| *Name*           | *Data Type* | *Description*                                               |
-| ---------------- | ----------- | ----------------------------------------------------------- |
-| sql              | String      | Heartbeat detection SQL                                     |
-| interval         | int         | Heartbeat detection task interval seconds                   |
-| threadCount      | int         | Thread pool size                                            |
-| retryEnable      | Boolean     | Whether to enable retry, set true or false                  |
-| retryMaximum(?)  | int         | Maximum number of retry, effective when retryEnable is true |
-| retryInterval(?) | int         | Retry interval (s), effective when retryEnable is true      |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
index a6767f2e17..0121d360ec 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.cn.md
@@ -17,14 +17,3 @@ spring.shardingsphere.orchestration.additional-config-center.server-lists= # 可
 spring.shardingsphere.orchestration.additional-config-center.props= # 可选的配置中心其它配置
 spring.shardingsphere.orchestration.overwrite= # 本地配置是否覆盖配置中心配置。如果可覆盖，每次启动都以本地配置为准.
 ```
-
-### 集群管理
-
-```properties
-spring.shardingsphere.cluster.heartbeat.sql= # 心跳检测 SQL
-spring.shardingsphere.cluster.heartbeat.interval= # 心跳检测间隔秒数
-spring.shardingsphere.cluster.heartbeat.threadCount= # 心跳检测线程池大小
-spring.shardingsphere.cluster.heartbeat.retryEnable= # 是否支持失败重试
-spring.shardingsphere.cluster.heartbeat.retryInterval= # 重试间隔秒数
-spring.shardingsphere.cluster.heartbeat.retryMaximum= # 最大重试次数
-```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
index bd3d685cf8..6d021090d2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/governance.en.md
@@ -17,14 +17,3 @@ spring.shardingsphere.orchestration.additional-config-center.server-lists= # Add
 spring.shardingsphere.orchestration.additional-config-center.props= # Additional config center other properties
 spring.shardingsphere.orchestration.overwrite= # Whether to overwrite local configurations with config center configurations; if it can, each initialization should refer to local configurations
 ```
-
-### Cluster
-
-```properties
-spring.shardingsphere.cluster.heartbeat.sql= #Heartbeat detection SQL
-spring.shardingsphere.cluster.heartbeat.interval= #Heartbeat detection task interval (s)
-spring.shardingsphere.cluster.heartbeat.threadCount= #Thread pool size
-spring.shardingsphere.cluster.heartbeat.retryEnable= #Whether to enable retry, set true or false
-spring.shardingsphere.cluster.heartbeat.retryInterval= #Retry interval (s), effective when retryEnable is true
-spring.shardingsphere.cluster.heartbeat.retryMaximum= #Maximum number of retry, effective when retryEnable is true
-```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.cn.md
index a3fce71ab1..6d24746744 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.cn.md
@@ -42,38 +42,3 @@ weight = 6
 | type          | 属性   | 配置中心类型。如：ZooKeeper, etcd, Apollo, Nacos                                 |
 | server-lists  | 属性   | 配置中心服务列表。包括 IP 地址和端口号。多个地址用逗号分隔。如: host1:2181,host2:2181 |
 | props (?)     | 属性   | 配置本实例需要的其他参数，例如 ZooKeeper 的连接参数等                               |
-
-### 集群管理
-
-```xml
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:orchestration="http://shardingsphere.apache.org/schema/shardingsphere/orchestration"
-       xmlns:cluster="http://shardingsphere.apache.org/schema/shardingsphere/cluster"
-       xmlns="http://www.springframework.org/schema/beans"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                           http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/orchestration
-                           http://shardingsphere.apache.org/schema/shardingsphere/orchestration/orchestration.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/cluster
-                           http://shardingsphere.apache.org/schema/shardingsphere/cluster/cluster.xsd
-                           ">
- 
-    <orchestration:data-source id="shardingDatabasesTablesDataSource" data-source-ref="realShardingDatabasesTablesDataSource" reg-center-ref="regCenter" cluster-ref="cluster" />
-    <cluster:heartbeat id="cluster" sql="select 1" threadCount="1" interval="60" retryEnable="false" retryMaximum="3" retryInterval="3"/>
-</beans>
-```
-
-命名空间: [http://shardingsphere.apache.org/schema/shardingsphere/orchestration/cluster-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/orchestration/cluster-5.0.0.xsd)
-
-<cluster:heartbeat />
-
-| *名称*             | *类型* | *说明*                              |
-| ----------------- | ------ | ----------------------------------- |
-| id                | 属性   | 心跳检测配置 ID                       |
-| sql               | 属性   | 心跳检测 SQL                         |
-| threadCount       | 属性   | 心跳检测线程池大小                    |
-| interval          | 属性   | 心跳检测间隔秒数                      |
-| retryEnable       | 属性   | 是否支持失败重试，可设置 true 或 false |
-| retryMaximum (?)  | 属性   | 最大重试次数                         |
-| retryInterval (?) | 属性   | 重试间隔时间 (s)                     |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.en.md
index c420b23320..c1b9df61c9 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/governance.en.md
@@ -42,38 +42,3 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/orchestration
 | type          | Attribute  | Config center type. Example: ZooKeeper, etcd, Nacos, Apollo                                             |
 | server-lists  | Attribute  | The list of servers that connect to config center, including IP and port number; use commas to separate |
 | props (?)     | Attribute  | Properties for center instance config, such as options of zookeeper                                     |
-
-### Cluster
-
-```xml
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:orchestration="http://shardingsphere.apache.org/schema/shardingsphere/orchestration"
-       xmlns:cluster="http://shardingsphere.apache.org/schema/shardingsphere/cluster"
-       xmlns="http://www.springframework.org/schema/beans"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                           http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/orchestration
-                           http://shardingsphere.apache.org/schema/shardingsphere/orchestration/orchestration.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/cluster
-                           http://shardingsphere.apache.org/schema/shardingsphere/cluster/cluster.xsd
-                           ">
- 
-    <orchestration:data-source id="shardingDatabasesTablesDataSource" data-source-ref="realShardingDatabasesTablesDataSource" reg-center-ref="regCenter" cluster-ref="cluster" />
-    <cluster:heartbeat id="cluster" sql="select 1" threadCount="1" interval="60" retryEnable="false" retryMaximum="3" retryInterval="3"/>
-</beans>
-```
-
-Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/orchestration/cluster-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/orchestration/cluster-5.0.0.xsd)
-
-<cluster:heartbeat />
-
-| *Name*            | *Type*    | *Description*                                               |
-| ----------------- | --------- | ----------------------------------------------------------- |
-| id                | Attribute | Heartbeat detection ID                                      |
-| sql               | Attribute | Heartbeat detection SQL                                     |
-| threadCount       | Attribute | Thread pool size                                            |
-| interval          | Attribute | Heartbeat detection task interval (s)                       |
-| retryEnable       | Attribute | Whether to enable retry, set true or false                  |
-| retryMaximum (?)  | Attribute | Maximum number of retry, effective when retryEnable is true |
-| retryInterval (?) | Attribute | Retry interval (s), effective when retryEnable is true      |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.cn.md
index 685e31a14d..87d15d6829 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.cn.md
@@ -18,16 +18,3 @@ orchestration:
     serverLists: # 治理服务列表。包括 IP 地址和端口号。多个地址用逗号分隔。如: host1:2181,host2:2181 
   overwrite: # 本地配置是否覆盖配置中心配置。如果可覆盖，每次启动都以本地配置为准
 ```
-
-### 集群管理
-
-```yaml
-cluster:
-  heartbeat:
-    sql: # 心跳检测 SQL
-    threadCount: # 心跳检测线程池大小
-    interval: # 心跳检测间隔秒数
-    retryEnable: # 是否支持失败重试
-    retryMaximum: # 最大重试次数
-    retryInterval: # 重试间隔秒数
-```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.en.md
index 2d7fdeedd7..03ef014ba7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/governance.en.md
@@ -18,16 +18,3 @@ orchestration:
     serverLists: #The list of servers that connect to orchestration instance, including IP and port number; use commas to separate
   overwrite: #Whether to overwrite local configurations with config center configurations; if it can, each initialization should refer to local configurations
 ```
-
-### Cluster
-
-```yaml
-cluster:
-  heartbeat:
-    sql: #Heartbeat detection SQL
-    threadCount: #Thread pool size 
-    interval: #Heartbeat detection task interval (s)
-    retryEnable: #Whether to enable retry, set true or false
-    retryMaximum: #Maximum number of retry, effective when retryEnable is true
-    retryInterval: #Retry interval (s), effective when retryEnable is true
-```
